<UNICODE-MAC>
<ParaStyle:h1>This is Title
<ParaStyle:h2>basic paragraph
<ParaStyle:p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
<ParaStyle:p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
<ParaStyle:p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
<ParaStyle:h2>inline style
<ParaStyle:p>inline styles are  <CharStyle:em>italic<CharStyle:> also <CharStyle:em>italic<CharStyle:> and <CharStyle:strong>strong<CharStyle:> and <CharStyle:code>inline code<CharStyle:> are supported.
<ParaStyle:h2>list style
<ParaStyle:h3>un-ordered list
<ParaStyle:ul1>level 1-1
<ParaStyle:ul1>level 1-2
<ParaStyle:ul2>level 2-1
<ParaStyle:ul2>level 2-2
<ParaStyle:ul3>level 3-1
<ParaStyle:ul3>level 3-2
<ParaStyle:ul2>level 2-3
<ParaStyle:ul1>level 1-3
<ParaStyle:h3>ordered list
<ParaStyle:ol1>level 1-1
<ParaStyle:ol1>level 1-2
<ParaStyle:ol2>level 2-1
<ParaStyle:ol2>level 2-2
<ParaStyle:ol3>level 3-1
<ParaStyle:ol3>level 3-2
<ParaStyle:ol2>level 2-3
<ParaStyle:ol1>level 1-3
<ParaStyle:p>(indent needs to be 4 space)
<ParaStyle:h3>definition list
<ParaStyle:dt>alice
<ParaStyle:dd>who starts handshake
<ParaStyle:dt>bob
<ParaStyle:dd>who receives handshake
<ParaStyle:dt>eve
<ParaStyle:dd>who in the middle of transaction
<ParaStyle:h2>table
<ParaStyle:th>ext	language
<ParaStyle:td>.cpp	c++
<ParaStyle:td>.erl	erlang
<ParaStyle:td>.js	javascript
<ParaStyle:td>.py	python
<ParaStyle:td>.rb	ruby
<ParaStyle:h2>blockquote
<ParaStyle:blockquote>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
<ParaStyle:blockquote>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
<ParaStyle:blockquote>--- https://en.wikipedia.org/wiki/Lorem_ipsum
<ParaStyle:h2>link
<ParaStyle:p><CharStyle:link>Example Domain<CharStyle:><CharStyle:href>https://example.com<CharStyle:>
<ParaStyle:h2>img
<ParaStyle:p><CharStyle:imgSrc>./sample.png<CharStyle:><CharStyle:imgTitle>this is sample image<CharStyle:><CharStyle:imgAlt>sample image<CharStyle:>
<ParaStyle:h2>html
<ParaStyle:p>html prints <strong>as is</strong>.
<ParaStyle:Comment><!-- block xml_comment -->
<ParaStyle:p>hello <CharStyle:Comment><!-- inline xml_comment --><CharStyle:> world
<ParaStyle:h2>hr
<ParaStyle:hr>
<ParaStyle:h2>Codeblock
<ParaStyle:h3>text block
<ParaStyle:code-text>Lorem \\ ipsum \\\\ dolor \<sit\> \<\<amet\>\>, consectetur adipiscing elit,
<ParaStyle:code-text>sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
<ParaStyle:h3>programing block
<ParaStyle:h4>javascript
<ParaStyle:code-js><CharStyle:CodeKeywordDeclaration>function<CharStyle:> <CharStyle:CodeNameOther>hoo<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>x<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js>  <CharStyle:CodeNameOther>console<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>log<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>x<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:>
<ParaStyle:code-js><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:h4>makefile
<ParaStyle:code-make:code/Makefile><CharStyle:CodeComment># Makefile
<ParaStyle:code-make:code/Makefile><CharStyle:><CharStyle:CodeNameLabel>.PHONY<CharStyle:><CharStyle:CodeOperator>:<CharStyle:> <CharStyle:CodeNameFunction>all<CharStyle:>
<ParaStyle:code-make:code/Makefile><CharStyle:CodeNameLabel>all<CharStyle:><CharStyle:CodeOperator>:<CharStyle:> <CharStyle:CodeNameFunction>main<CharStyle:>
<ParaStyle:code-make:code/Makefile>
<ParaStyle:code-make:code/Makefile><CharStyle:CodeNameLabel>main<CharStyle:><CharStyle:CodeOperator>:<CharStyle:> <CharStyle:CodeNameFunction>main.o<CharStyle:>
<ParaStyle:code-make:code/Makefile>	gcc <CharStyle:CodeNameTag>-o<CharStyle:> main main.o
<ParaStyle:code-make:code/Makefile>
<ParaStyle:code-make:code/Makefile><CharStyle:CodeNameLabel>main.o<CharStyle:><CharStyle:CodeOperator>:<CharStyle:> <CharStyle:CodeNameFunction>main.c<CharStyle:>
<ParaStyle:code-make:code/Makefile>	gcc <CharStyle:CodeNameTag>-c<CharStyle:> main.c
<ParaStyle:code-make:code/Makefile>
<ParaStyle:code-make:code/Makefile><CharStyle:CodeNameLabel>.PHONY<CharStyle:><CharStyle:CodeOperator>:<CharStyle:> <CharStyle:CodeNameFunction>clean<CharStyle:>
<ParaStyle:code-make:code/Makefile><CharStyle:CodeNameLabel>clean<CharStyle:><CharStyle:CodeOperator>:<CharStyle:>
<ParaStyle:code-make:code/Makefile>	<CharStyle:CodeNameBuiltin>rm<CharStyle:> <CharStyle:CodeNameTag>-rf<CharStyle:> main main.o
<ParaStyle:h4>http
<ParaStyle:code-http:code/http>GET / HTTP/1.1
<ParaStyle:code-http:code/http>Host: example.com
<ParaStyle:code-http:code/http>Connection: keep-alive
<ParaStyle:code-http:code/http>Pragma: no-cache
<ParaStyle:code-http:code/http>Cache-Control: no-cache
<ParaStyle:code-http:code/http>Upgrade-Insecure-Requests: 1
<ParaStyle:code-http:code/http>User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36
<ParaStyle:code-http:code/http>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3
<ParaStyle:code-http:code/http>Accept-Encoding: gzip, deflate
<ParaStyle:code-http:code/http>Accept-Language: ja,en-US;q=0.9,en;q=0.8
<ParaStyle:h4>noginx.conf
<ParaStyle:code-conf:code/nginx.conf><CharStyle:CodeComment># https://www.nginx.com/resources/wiki/start/topics/examples/full/
<ParaStyle:code-conf:code/nginx.conf><CharStyle:><CharStyle:CodeName>user<CharStyle:>       <CharStyle:CodeName>www<CharStyle:> <CharStyle:CodeName>www<CharStyle:>;  <CharStyle:CodeComment>## Default: nobody
<ParaStyle:code-conf:code/nginx.conf><CharStyle:><CharStyle:CodeName>worker_processes<CharStyle:>  <CharStyle:CodeLiteralNumber>5<CharStyle:>;  <CharStyle:CodeComment>## Default: 1
<ParaStyle:code-conf:code/nginx.conf><CharStyle:><CharStyle:CodeName>error_log<CharStyle:>  <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>error<CharStyle:>.<CharStyle:CodeName>log<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf><CharStyle:CodeName>pid<CharStyle:>        <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>nginx<CharStyle:>.<CharStyle:CodeName>pid<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf><CharStyle:CodeName>worker_rlimit_nofile<CharStyle:> <CharStyle:CodeLiteralNumber>8192<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf><CharStyle:CodeName>events<CharStyle:> {
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>worker_connections<CharStyle:>  <CharStyle:CodeLiteralNumber>4096<CharStyle:>;  <CharStyle:CodeComment>## Default: 1024
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>}
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf><CharStyle:CodeName>http<CharStyle:> {
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>include<CharStyle:>    <CharStyle:CodeName>conf<CharStyle:>/<CharStyle:CodeName>mime<CharStyle:>.<CharStyle:CodeName>types<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>include<CharStyle:>    /<CharStyle:CodeName>etc<CharStyle:>/<CharStyle:CodeName>nginx<CharStyle:>/<CharStyle:CodeName>proxy<CharStyle:>.<CharStyle:CodeName>conf<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>include<CharStyle:>    /<CharStyle:CodeName>etc<CharStyle:>/<CharStyle:CodeName>nginx<CharStyle:>/<CharStyle:CodeName>fastcgi<CharStyle:>.<CharStyle:CodeName>conf<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>index<CharStyle:>    <CharStyle:CodeName>index<CharStyle:>.<CharStyle:CodeName>html<CharStyle:> <CharStyle:CodeName>index<CharStyle:>.<CharStyle:CodeName>htm<CharStyle:> <CharStyle:CodeName>index<CharStyle:>.<CharStyle:CodeName>php<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>default_type<CharStyle:> <CharStyle:CodeName>application<CharStyle:>/<CharStyle:CodeName>octet<CharStyle:>-<CharStyle:CodeName>stream<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>log_format<CharStyle:>   <CharStyle:CodeName>main<CharStyle:> <CharStyle:CodeLiteralStringSingle>'$remote_addr - $remote_user [$time_local]  $status '<CharStyle:>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeLiteralStringSingle>'"$request" $body_bytes_sent "$http_referer" '<CharStyle:>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeLiteralStringSingle>'"$http_user_agent" "$http_x_forwarded_for"'<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>access_log<CharStyle:>   <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>access<CharStyle:>.<CharStyle:CodeName>log<CharStyle:>  <CharStyle:CodeName>main<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>sendfile<CharStyle:>     <CharStyle:CodeName>on<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>tcp_nopush<CharStyle:>   <CharStyle:CodeName>on<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>server_names_hash_bucket_size<CharStyle:> <CharStyle:CodeLiteralNumber>128<CharStyle:>; <CharStyle:CodeComment># this seems to be required for some vhosts
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>server<CharStyle:> { <CharStyle:CodeComment># php/fastcgi
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>    <CharStyle:CodeName>listen<CharStyle:>       <CharStyle:CodeLiteralNumber>80<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server_name<CharStyle:>  <CharStyle:CodeName>domain1<CharStyle:>.<CharStyle:CodeName>com<CharStyle:> <CharStyle:CodeName>www<CharStyle:>.<CharStyle:CodeName>domain1<CharStyle:>.<CharStyle:CodeName>com<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>access_log<CharStyle:>   <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>domain1<CharStyle:>.<CharStyle:CodeName>access<CharStyle:>.<CharStyle:CodeName>log<CharStyle:>  <CharStyle:CodeName>main<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>root<CharStyle:>         <CharStyle:CodeName>html<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>location<CharStyle:> ~ \\.<CharStyle:CodeName>php<CharStyle:>$ {
<ParaStyle:code-conf:code/nginx.conf>      <CharStyle:CodeName>fastcgi_pass<CharStyle:>   <CharStyle:CodeLiteralNumber>127<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>1<CharStyle:>:<CharStyle:CodeLiteralNumber>1025<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    }
<ParaStyle:code-conf:code/nginx.conf>  }
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>server<CharStyle:> { <CharStyle:CodeComment># simple reverse-proxy
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>    <CharStyle:CodeName>listen<CharStyle:>       <CharStyle:CodeLiteralNumber>80<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server_name<CharStyle:>  <CharStyle:CodeName>domain2<CharStyle:>.<CharStyle:CodeName>com<CharStyle:> <CharStyle:CodeName>www<CharStyle:>.<CharStyle:CodeName>domain2<CharStyle:>.<CharStyle:CodeName>com<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>access_log<CharStyle:>   <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>domain2<CharStyle:>.<CharStyle:CodeName>access<CharStyle:>.<CharStyle:CodeName>log<CharStyle:>  <CharStyle:CodeName>main<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeComment># serve static files
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>    <CharStyle:CodeName>location<CharStyle:> ~ ^/(<CharStyle:CodeName>images<CharStyle:>|<CharStyle:CodeName>javascript<CharStyle:>|<CharStyle:CodeName>js<CharStyle:>|<CharStyle:CodeName>css<CharStyle:>|<CharStyle:CodeName>flash<CharStyle:>|<CharStyle:CodeName>media<CharStyle:>|<CharStyle:CodeName>static<CharStyle:>)/  {
<ParaStyle:code-conf:code/nginx.conf>      <CharStyle:CodeName>root<CharStyle:>    /<CharStyle:CodeName>var<CharStyle:>/<CharStyle:CodeName>www<CharStyle:>/<CharStyle:CodeName>virtual<CharStyle:>/<CharStyle:CodeName>big<CharStyle:>.<CharStyle:CodeName>server<CharStyle:>.<CharStyle:CodeName>com<CharStyle:>/<CharStyle:CodeName>htdocs<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>      <CharStyle:CodeName>expires<CharStyle:> <CharStyle:CodeLiteralNumber>30<CharStyle:><CharStyle:CodeName>d<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    }
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeComment># pass requests for dynamic content to rails/turbogears/zope, et al
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>    <CharStyle:CodeName>location<CharStyle:> / {
<ParaStyle:code-conf:code/nginx.conf>      <CharStyle:CodeName>proxy_pass<CharStyle:>      <CharStyle:CodeName>http<CharStyle:>://<CharStyle:CodeLiteralNumber>127<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>1<CharStyle:>:<CharStyle:CodeLiteralNumber>8080<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    }
<ParaStyle:code-conf:code/nginx.conf>  }
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>upstream<CharStyle:> <CharStyle:CodeName>big_server_com<CharStyle:> {
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server<CharStyle:> <CharStyle:CodeLiteralNumber>127<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>3<CharStyle:>:<CharStyle:CodeLiteralNumber>8000<CharStyle:> <CharStyle:CodeName>weight<CharStyle:>=<CharStyle:CodeLiteralNumber>5<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server<CharStyle:> <CharStyle:CodeLiteralNumber>127<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>3<CharStyle:>:<CharStyle:CodeLiteralNumber>8001<CharStyle:> <CharStyle:CodeName>weight<CharStyle:>=<CharStyle:CodeLiteralNumber>5<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server<CharStyle:> <CharStyle:CodeLiteralNumber>192<CharStyle:>.<CharStyle:CodeLiteralNumber>168<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>1<CharStyle:>:<CharStyle:CodeLiteralNumber>8000<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server<CharStyle:> <CharStyle:CodeLiteralNumber>192<CharStyle:>.<CharStyle:CodeLiteralNumber>168<CharStyle:>.<CharStyle:CodeLiteralNumber>0<CharStyle:>.<CharStyle:CodeLiteralNumber>1<CharStyle:>:<CharStyle:CodeLiteralNumber>8001<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>  }
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>  <CharStyle:CodeName>server<CharStyle:> { <CharStyle:CodeComment># simple load balancing
<ParaStyle:code-conf:code/nginx.conf><CharStyle:>    <CharStyle:CodeName>listen<CharStyle:>          <CharStyle:CodeLiteralNumber>80<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>server_name<CharStyle:>     <CharStyle:CodeName>big<CharStyle:>.<CharStyle:CodeName>server<CharStyle:>.<CharStyle:CodeName>com<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>access_log<CharStyle:>      <CharStyle:CodeName>logs<CharStyle:>/<CharStyle:CodeName>big<CharStyle:>.<CharStyle:CodeName>server<CharStyle:>.<CharStyle:CodeName>access<CharStyle:>.<CharStyle:CodeName>log<CharStyle:> <CharStyle:CodeName>main<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>
<ParaStyle:code-conf:code/nginx.conf>    <CharStyle:CodeName>location<CharStyle:> / {
<ParaStyle:code-conf:code/nginx.conf>      <CharStyle:CodeName>proxy_pass<CharStyle:>      <CharStyle:CodeName>http<CharStyle:>://<CharStyle:CodeName>big_server_com<CharStyle:>;
<ParaStyle:code-conf:code/nginx.conf>    }
<ParaStyle:code-conf:code/nginx.conf>  }
<ParaStyle:h4>go
<ParaStyle:code-go:code/sample.go><CharStyle:CodeKeyword>package<CharStyle:> <CharStyle:CodeName>main<CharStyle:>
<ParaStyle:code-go:code/sample.go>
<ParaStyle:code-go:code/sample.go><CharStyle:CodeKeyword>import<CharStyle:> <CharStyle:CodeLiteralString>"fmt"<CharStyle:>
<ParaStyle:code-go:code/sample.go>
<ParaStyle:code-go:code/sample.go><CharStyle:CodeKeyword>func<CharStyle:> <CharStyle:CodeName>main<CharStyle:><CharStyle:CodePunctuation>()<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-go:code/sample.go>	<CharStyle:CodeComment>// this is sample code<CharStyle:>
<ParaStyle:code-go:code/sample.go>	<CharStyle:CodeName>fmt<CharStyle:><CharStyle:CodeOperator>.<CharStyle:><CharStyle:CodeName>Println<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeLiteralString>"Hello World"<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:>
<ParaStyle:code-go:code/sample.go><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:h4>java
<ParaStyle:code-java:code/sample.java><CharStyle:CodeKeywordDeclaration>public<CharStyle:> <CharStyle:CodeKeywordDeclaration>class<CharStyle:> <CharStyle:CodeNameClass>HelloWorld<CharStyle:> <CharStyle:CodeOperator>{<CharStyle:>
<ParaStyle:code-java:code/sample.java>  <CharStyle:CodeKeywordDeclaration>public<CharStyle:> <CharStyle:CodeKeywordDeclaration>static<CharStyle:> <CharStyle:CodeKeywordType>void<CharStyle:> <CharStyle:CodeNameFunction>main<CharStyle:><CharStyle:CodeOperator>(<CharStyle:><CharStyle:CodeNameClass>String<CharStyle:><CharStyle:CodeOperator>[]<CharStyle:> <CharStyle:CodeName>args<CharStyle:><CharStyle:CodeOperator>)<CharStyle:> <CharStyle:CodeOperator>{<CharStyle:>
<ParaStyle:code-java:code/sample.java>    <CharStyle:CodeNameClass>System<CharStyle:><CharStyle:CodeOperator>.<CharStyle:><CharStyle:CodeNameAttribute>out<CharStyle:><CharStyle:CodeOperator>.<CharStyle:><CharStyle:CodeNameAttribute>printf<CharStyle:><CharStyle:CodeOperator>(<CharStyle:><CharStyle:CodeLiteralString>"Hello World"<CharStyle:><CharStyle:CodeOperator>);<CharStyle:>
<ParaStyle:code-java:code/sample.java>  <CharStyle:CodeOperator>}<CharStyle:>
<ParaStyle:code-java:code/sample.java>
<ParaStyle:code-java:code/sample.java>  <CharStyle:CodeKeywordDeclaration>public<CharStyle:> <CharStyle:CodeKeywordDeclaration>static<CharStyle:> <CharStyle:CodeKeywordType>int<CharStyle:> <CharStyle:CodeNameFunction>add<CharStyle:><CharStyle:CodeOperator>(<CharStyle:><CharStyle:CodeKeywordType>int<CharStyle:> <CharStyle:CodeName>x<CharStyle:><CharStyle:CodeOperator>,<CharStyle:> <CharStyle:CodeKeywordType>int<CharStyle:> <CharStyle:CodeName>y<CharStyle:><CharStyle:CodeOperator>)<CharStyle:> <CharStyle:CodeOperator>{<CharStyle:>
<ParaStyle:code-java:code/sample.java>    <CharStyle:CodeKeywordType>int<CharStyle:> <CharStyle:CodeName>z<CharStyle:> <CharStyle:CodeOperator>=<CharStyle:> <CharStyle:CodeName>x<CharStyle:> <CharStyle:CodeOperator>+<CharStyle:> <CharStyle:CodeName>y<CharStyle:><CharStyle:CodeOperator>;<CharStyle:>
<ParaStyle:code-java:code/sample.java>    <CharStyle:CodeKeyword>return<CharStyle:> <CharStyle:CodeName>z<CharStyle:><CharStyle:CodeOperator>;<CharStyle:>
<ParaStyle:code-java:code/sample.java>  <CharStyle:CodeOperator>}<CharStyle:>
<ParaStyle:code-java:code/sample.java><CharStyle:CodeOperator>}<CharStyle:>
<ParaStyle:h4>html
<ParaStyle:code-html:code/sample.html><CharStyle:CodeCommentPreproc>\<!DOCTYPE html\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<meta<CharStyle:> <CharStyle:CodeNameAttribute>charset=<CharStyle:><CharStyle:CodeLiteralString>utf-8<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<meta<CharStyle:> <CharStyle:CodeNameAttribute>name=<CharStyle:><CharStyle:CodeLiteralString>viewport<CharStyle:> <CharStyle:CodeNameAttribute>content=<CharStyle:><CharStyle:CodeLiteralString>"width=device-width,initial-scale=1"<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<title\><CharStyle:>DEMO<CharStyle:CodeNameTag>\</title\><CharStyle:>
<ParaStyle:code-html:code/sample.html>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<style\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\</style\><CharStyle:>
<ParaStyle:code-html:code/sample.html>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<h1\><CharStyle:>Test<CharStyle:CodeNameTag>\</h1\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeComment>\<!-- comment --\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<p\><CharStyle:>this is <CharStyle:CodeNameTag>\<strong\><CharStyle:>sample<CharStyle:CodeNameTag>\</strong\><CharStyle:> text<CharStyle:CodeNameTag>\</p\><CharStyle:>
<ParaStyle:code-html:code/sample.html>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\<div\><CharStyle:>
<ParaStyle:code-html:code/sample.html>  <CharStyle:CodeNameTag>\<video<CharStyle:> <CharStyle:CodeNameAttribute>src=<CharStyle:><CharStyle:CodeLiteralString>"some.mp4"<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html>  <CharStyle:CodeNameTag>\<img<CharStyle:> <CharStyle:CodeNameAttribute>src=<CharStyle:><CharStyle:CodeLiteralString>some.webp<CharStyle:> <CharStyle:CodeNameAttribute>label=<CharStyle:><CharStyle:CodeLiteralString>"good picture"<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html>
<ParaStyle:code-html:code/sample.html>  <CharStyle:CodeNameTag>\<form<CharStyle:> <CharStyle:CodeNameAttribute>action=<CharStyle:><CharStyle:CodeLiteralString>/login<CharStyle:> <CharStyle:CodeNameAttribute>method=<CharStyle:><CharStyle:CodeLiteralString>post<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html>    <CharStyle:CodeNameTag>\<input<CharStyle:> <CharStyle:CodeNameAttribute>type=<CharStyle:><CharStyle:CodeLiteralString>text<CharStyle:> <CharStyle:CodeNameAttribute>name=<CharStyle:><CharStyle:CodeLiteralString>username<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html>    <CharStyle:CodeNameTag>\<input<CharStyle:> <CharStyle:CodeNameAttribute>type=<CharStyle:><CharStyle:CodeLiteralString>password<CharStyle:> <CharStyle:CodeNameAttribute>name=<CharStyle:><CharStyle:CodeLiteralString>password<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>
<ParaStyle:code-html:code/sample.html>    <CharStyle:CodeNameTag>\<button<CharStyle:> <CharStyle:CodeNameAttribute>type=<CharStyle:><CharStyle:CodeLiteralString>submit<CharStyle:><CharStyle:CodeNameTag>\><CharStyle:>ok<CharStyle:CodeNameTag>\</button\><CharStyle:>
<ParaStyle:code-html:code/sample.html>  <CharStyle:CodeNameTag>\</form\><CharStyle:>
<ParaStyle:code-html:code/sample.html><CharStyle:CodeNameTag>\</div\><CharStyle:>
<ParaStyle:h4>css
<ParaStyle:code-css:code/style.css><CharStyle:CodeComment>/** markdown like css **/<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>strong<CharStyle:><CharStyle:CodeNameDecorator>::before<CharStyle:><CharStyle:CodeOperator>,<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>strong<CharStyle:><CharStyle:CodeNameDecorator>::after<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>content<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralStringSingle>"**"<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-css:code/style.css>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>ul<CharStyle:> <CharStyle:CodeNameTag>li<CharStyle:><CharStyle:CodeNameDecorator>::before<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>content<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralStringSingle>"- "<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-css:code/style.css>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>ol<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>counter-reset<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeName>list<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-css:code/style.css>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>ol<CharStyle:> <CharStyle:CodeNameTag>li<CharStyle:><CharStyle:CodeNameDecorator>::before<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>counter-increment<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeName>list<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>content<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeName>counter<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeName>list<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodeLiteralStringSingle>". "<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-css:code/style.css>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>dl<CharStyle:> <CharStyle:CodeNameTag>dt<CharStyle:><CharStyle:CodeNameDecorator>::after<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>content<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralStringSingle>":"<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-css:code/style.css>
<ParaStyle:code-css:code/style.css><CharStyle:CodeNameTag>blockquote<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>display<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeNameBuiltin>block<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>border<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeNameBuiltin>solid<CharStyle:> <CharStyle:CodeLiteralNumber>1px<CharStyle:> <CharStyle:CodeName>var<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeName>--block-quote<CharStyle:><CharStyle:CodePunctuation>);<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>border-radius<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralNumber>4px<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>padding<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralNumber>0.4em<CharStyle:> <CharStyle:CodeLiteralNumber>1em<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css>  <CharStyle:CodeNameLabel>margin<CharStyle:><CharStyle:CodePunctuation>:<CharStyle:> <CharStyle:CodeLiteralNumber>0<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:code-css:code/style.css><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:h4>js
<ParaStyle:code-js:code/script.js><CharStyle:CodeKeyword>import<CharStyle:> <CharStyle:CodeNameOther>file<CharStyle:> <CharStyle:CodeKeyword>from<CharStyle:> <CharStyle:CodeNameOther>fs<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js><CharStyle:CodeKeywordDeclaration>function<CharStyle:> <CharStyle:CodeNameOther>callback<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>err<CharStyle:><CharStyle:CodePunctuation>,<CharStyle:> <CharStyle:CodeNameOther>file<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeKeyword>if<CharStyle:> <CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>err<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodeKeyword>return<CharStyle:> <CharStyle:CodeNameOther>console<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>error<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>err<CharStyle:><CharStyle:CodePunctuation>);<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeCommentMultiline>/* do something */<CharStyle:>
<ParaStyle:code-js:code/script.js><CharStyle:CodePunctuation>};<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js><CharStyle:CodeNameOther>file<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>open<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>callback<CharStyle:><CharStyle:CodePunctuation>);<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js><CharStyle:CodeKeywordDeclaration>class<CharStyle:> <CharStyle:CodeNameOther>Test<CharStyle:> <CharStyle:CodeKeywordDeclaration>extends<CharStyle:> <CharStyle:CodeNameOther>EventEmitter<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeKeywordDeclaration>constructor<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>data<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>    <CharStyle:CodeKeyword>this<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>data<CharStyle:> <CharStyle:CodeOperator>=<CharStyle:> <CharStyle:CodeNameOther>data<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeNameOther>jquery<CharStyle:><CharStyle:CodePunctuation>()<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>    <CharStyle:CodeNameOther>$<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeLiteralStringDelimiter>'<CharStyle:><CharStyle:CodeLiteralStringSingle>body<CharStyle:><CharStyle:CodeLiteralStringDelimiter>'<CharStyle:><CharStyle:CodePunctuation>).<CharStyle:><CharStyle:CodeNameOther>innerHTML<CharStyle:> <CharStyle:CodeOperator>=<CharStyle:> <CharStyle:CodeLiteralStringDelimiter>"<CharStyle:><CharStyle:CodeLiteralStringDouble>alert('xss')<CharStyle:><CharStyle:CodeLiteralStringDelimiter>"<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeNameOther>promise<CharStyle:><CharStyle:CodePunctuation>()<CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>    <CharStyle:CodeKeyword>return<CharStyle:> <CharStyle:CodeNameBuiltin>Promise<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>resolve<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeLiteralStringDelimiter>'<CharStyle:><CharStyle:CodeLiteralStringSingle>foo<CharStyle:><CharStyle:CodeLiteralStringDelimiter>'<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-js:code/script.js><CharStyle:CodePunctuation>}<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js><CharStyle:CodeKeywordDeclaration>const<CharStyle:> <CharStyle:CodeNameOther>test<CharStyle:> <CharStyle:CodeOperator>=<CharStyle:> <CharStyle:CodeKeyword>new<CharStyle:> <CharStyle:CodeNameOther>Test<CharStyle:><CharStyle:CodePunctuation>()<CharStyle:>
<ParaStyle:code-js:code/script.js><CharStyle:CodeNameOther>test<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>promise<CharStyle:><CharStyle:CodePunctuation>().<CharStyle:><CharStyle:CodeNameOther>then<CharStyle:><CharStyle:CodePunctuation>((<CharStyle:><CharStyle:CodeNameOther>e<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:> <CharStyle:CodeOperator>=\><CharStyle:> <CharStyle:CodePunctuation>{<CharStyle:>
<ParaStyle:code-js:code/script.js>  <CharStyle:CodeNameOther>console<CharStyle:><CharStyle:CodePunctuation>.<CharStyle:><CharStyle:CodeNameOther>log<CharStyle:><CharStyle:CodePunctuation>(<CharStyle:><CharStyle:CodeNameOther>e<CharStyle:><CharStyle:CodePunctuation>)<CharStyle:>
<ParaStyle:code-js:code/script.js><CharStyle:CodePunctuation>})<CharStyle:>
<ParaStyle:code-js:code/script.js>
<ParaStyle:code-js:code/script.js><CharStyle:CodeKeyword>export<CharStyle:> <CharStyle:CodeNameOther>module<CharStyle:><CharStyle:CodePunctuation>;<CharStyle:>
<ParaStyle:h3>special text
<ParaStyle:p>' & " \< \> "single quote in 'double' quote" ... --- -- \<\< \>\>
<ParaStyle:h3>reference charactor
<ParaStyle:p>&lt; &gt; &quot;